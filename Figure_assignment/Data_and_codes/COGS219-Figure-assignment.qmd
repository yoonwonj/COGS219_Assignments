---
  title: "COGS219-Figure-assignment"
author: "Yoonwon Jung"
format: 
  html:
  code-fold: true
code-tools: true
toc: true
editor: visual
---

## Load the packages and the data

```{r}
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)

dat <- read.csv("Figure4b_TrainingData_Summary.csv", header = TRUE)
```

## process the data into the desired format

```{r}
### Clean up row names: this block of code generated by ChatGPT ###
dat <- dat %>%
  mutate(
    X = str_remove_all(X, "- Mean|- Standard deviation")
  )
```

```{r}
colnames(dat)[1]<- "Model"
colnames(dat)[2:11]<- c(1:10)
colnames(dat)
```

```{r}
# Convert it into a single long format data
dat.mean<- dat[1:7,]
dat.sd<- dat[8:14,]

dat.mean.long <- dat.mean %>%
  pivot_longer(cols = -Model, names_to = "X", values_to = "Mean")

dat.sd.long <- dat.sd %>%
  pivot_longer(cols = -Model, names_to = "X", values_to = "SD")

dat.tidy <- left_join(dat.mean.long, dat.sd.long, by = c("Model", "X"))
```

```{r}
colnames(dat.tidy)[2]<- "Units"
print(dat.tidy)
```

```{r}
dat.tidy$Units<- as.numeric(dat.tidy$Units)
dat.tidy$Model<- as.factor(dat.tidy$Model)
str(dat.tidy)
```

```{r}
dat.tidy$SE <- dat.tidy$SD/sqrt(50) #n=50 iterations
print(dat.tidy)
```

## Create ggplot figure

```{r}
#| echo: false
### Codes with comments at the end are the codes generated by ChatGPT

plot <- dat.tidy %>% 
  ggplot(mapping = aes(x = Units, y = Mean, color = Model, shape = Model)) + 
  geom_line() + 
  geom_point(size = 2) + 
  geom_errorbar(aes(ymin = Mean - SD, ymax = Mean + SD), width = 0.05) + 
  scale_x_continuous(breaks = c(1:10)) + 
  theme_minimal() + 
  theme(
    legend.position = c(0.7, 0.3),
    legend.direction = "horizontal",
    legend.key.size = unit(0.2, "cm"),
    legend.spacing.x = unit(0.1, "cm"),  # Reduced horizontal spacing between legend items
    legend.text = element_text(size = 8), 
    legend.title = element_text(size = 8),
    legend.background = element_rect(fill = "white", color = "grey"),
    plot.title = element_text(size=12, face="bold", hjust = 0.5)
  ) +
  scale_color_manual(name="Models",
    values = c("AE-linear-linear " = "brown", 
               "AE-linear-linear-L1_lamda_0.1 " = "darkorange", 
               "AE-linear-linear-L1_lamda_0.3 " = "coral", 
               "AE-linear-linear-L1_lamda_0.5 " = "darkgoldenrod", 
               "AE-tanh-linear " = "blue", 
               "AE-sigmoid-linear " = "darkgreen", 
               "AE-ReLu-linear " = "purple")
  ) + 
  scale_shape_manual(name= "Models",
    values = c("AE-linear-linear " = 17, 
               "AE-linear-linear-L1_lamda_0.1 " = 17, 
               "AE-linear-linear-L1_lamda_0.3 " = 17, 
               "AE-linear-linear-L1_lamda_0.5 " = 17, 
               "AE-tanh-linear " = 16, 
               "AE-sigmoid-linear " = 16, 
               "AE-ReLu-linear " = 16)) + # 17 = triangle, 16 = circle
  ggtitle("Dimensionality Analysis with Artificial Neural Network")+
  xlab("Number of units in the hidden layer") + 
  ylab("Explained variance in training data") + 
  guides(
    color = guide_legend(ncol = 2),
    shape = guide_legend(ncol = 2)
  )
plot

```

```{r}
ggsave("revised_figure.jpg", plot = plot, width = 8, height = 6, dpi = 300)
```
